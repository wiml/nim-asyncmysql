diff --git a/lib/wrappers/openssl.nim b/lib/wrappers/openssl.nim
index 03729db..9d9b7ff 100644
--- a/lib/wrappers/openssl.nim
+++ b/lib/wrappers/openssl.nim
@@ -70,6 +70,7 @@ type
   PX509* = SslPtr
   PX509_NAME* = SslPtr
   PEVP_MD* = SslPtr
+  PEVP_MD_CTX* = SslPtr
   PBIO_METHOD* = SslPtr
   BIO* = SslPtr
   EVP_PKEY* = SslPtr
@@ -464,13 +465,10 @@ else:
   proc EvpPkeyFree*(pk: EVP_PKEY){.cdecl, dynlib: DLLUtilName, importc.}
   proc EvpPkeyAssign*(pkey: EVP_PKEY, typ: cInt, key: Prsa): cInt{.cdecl, 
       dynlib: DLLUtilName, importc.}
-  proc EvpGetDigestByName*(Name: cstring): PEVP_MD{.cdecl, dynlib: DLLUtilName, 
-      importc.}
   proc EVPcleanup*(){.cdecl, dynlib: DLLUtilName, importc.}
     #  function ErrErrorString(e: cInt; buf: PChar): PChar;
   proc SSLeayversion*(t: cInt): cstring{.cdecl, dynlib: DLLUtilName, importc.}
 
-
   proc OPENSSLaddallalgorithms*(){.cdecl, dynlib: DLLUtilName, importc.}
   proc CRYPTOcleanupAllExData*(){.cdecl, dynlib: DLLUtilName, importc.}
   proc RandScreen*(){.cdecl, dynlib: DLLUtilName, importc.}
@@ -507,6 +505,23 @@ else:
   proc SSLGetMode(s: PSSL): int = 
     result = SSLctrl(s, SSL_CTRL_MODE, 0, nil)
 
+{.passL: "-lcrypto".}
+{.push cdecl, header:"<openssl/evp.h>".}
+proc EvpGetDigestByName*(Name: cstring): PEVP_MD {.importc:"EVP_get_digestbyname".}
+proc EvpMD5*():PEVP_MD {.importc:"EVP_md5".}
+proc EvpSHA1*():PEVP_MD {.importc:"EVP_sha1".}
+proc EvpSHA256*():PEVP_MD {.importc:"EVP_sha256".}
+proc EvpSHA512*():PEVP_MD {.importc:"EVP_sha512".}
+proc EvpDigestSize*(md: PEVP_MD): cInt {.importc:"EVP_MD_size".}
+proc EvpDigestCtxCreate*(): PEVP_MD_CTX {.importc:"EVP_MD_CTX_create".}
+proc EvpDigestCtxDestroy*(ctx: PEVP_MD_CTX) {.importc:"EVP_MD_CTX_destroy".}
+proc init*(ctx: PEVP_MD_CTX, typ: PEVP_MD, engine: SslPtr = nil): cInt {.importc:"EVP_DigestInit_ex".}
+proc update*(ctx: PEVP_MD_CTX, data: openarray[char]): cInt {.importc:"EVP_DigestUpdate",discardable.}
+proc update*(ctx: PEVP_MD_CTX, data: pointer, len: csize): cInt {.importc:"EVP_DigestUpdate",discardable.}
+proc final*(ctx: PEVP_MD_CTX, buffer: pointer, size: ptr cInt): cInt {.importc:"EVP_DigestFinal_ex".}
+proc cleanup*(ctx: PEVP_MD_CTX): cInt {.importc:"EVP_MD_CTX_cleanup",discardable.}
+{.pop.}
+
 # <openssl/md5.h>
 type 
   MD5_LONG* = cuint
